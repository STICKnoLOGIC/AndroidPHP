# This is a basic workflow to help you get started with Actions

name: git test build for Android

# Controls when the workflow will run
on:
 workflow_dispatch:
  inputs:
      tagname:
        description: 'tagname'
        required: true
        default: '8.0.x'
      prefix:
        description: 'your package name'
        required: true
        default: 'ph.STICKnoLOGIC.com.laramobi'
      createRelease:
        description: 'If "yes", create the release.'
        required: true
        default: 'yes'
      version:
        description: 'version'
        required: true
        default : 'v1Beta'

jobs:
   build-on-aarch64:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: setup Environment for Cross-compiling for Android ARMv8 (aarch64)
        run: source ./installer && setup_environment
          
      - name: install
        run: source ./installer && cd $BUILD_DIR && build_git
          
          

      - name: minifying and fixing git-core
        working-directory: git-static
        run: |
            ls --color=auto
            set -ex
            
            for file in add am annotate apply archive bisect--helper blame branch bugreport bundle cat-file check-attr check-ignore check-mailmap check-ref-format checkout checkout--worker checkout-index cherry cherry-pick clean clone column commit commit-graph commit-tree config count-objects credential credential-cache credential-cache--daemon credential-store describe diff diff-files diff-index diff-tree diftool env--helper fast-export fast-import fetch fetch-pack fmt-merge-msg for-each-ref for-each-repo format-patch fsck fsck-obkects gc get-tar-commit-id grep hash-object help index-pack init init-db interpret-trailers log ls-files ls-remote ls-tree mailinfo mailsplit maintenance merge merge-base merge-file merge-index merge-ours merge-recursive merge-subtree merge-tree mktag mktree multi-pack-index mv name-rev notes pack-objects pack-redundant pack-refs patch-id prune prune-packed pull push range-diff read-tree rebase receive-pack reflog remote remote-ext remote-fd repack replace rerere reset restore rev-list rev-parse revert rm send-pack shortlog show show-branch show-index show-ref sparse-checkout stage stash status stripspace submodule--helper switch symbolic-ref tag unpack-file unpack-objects update-index update-ref update-server-info upload-archive upload-pack var verify-commit verify-pack verify-tag whatchanged worktree write-tree; do 
              if [ -e "etc/git/git-core/git-"$file ]; then
                sudo rm -vf "etc/git/git-core/git-"$file
                touch "etc/git/git-core/git-"$file
                sudo echo "git" >> "etc/git/git-core/git-"$file
                fi
            done
            
            for file in remote-ftp remote-ftps remote-https ; do
              if [ -e "./etc/git/git-core/git-"$file ]; then
                sudo rm -vf "./etc/git/git-core/git-"$file
                sudo echo "git-remote-http" >> ./etc/git/git-core/git-"$file
              fi
            done
            
            for file in merge-resolve bisect merge-octopus difftool--helper quiltimport merge-one-file request-pull web--browse submodule mergetool filter-branch instaweb subtree citool ; do
              if [ -e "./etc/git/git-core/git-"$file ]; then
                sudo sed -i 's/#!\/bin\/sh/#!\/system\/bin\/sh/g' "./etc/git/git-core/git-"$file
              fi
            done
               
            # perl
            for file in cvsexportcommit cvsimport archimport add--interactive send-email cvsserver  ; do
              if [ -e "./etc/git/git-core/git-"$file ]; then
                sed -i 's/#!\/bin\/sh/#!\/system\/bin\/perl/g' "./etc/git/git-core/git-"$file
              fi
            done
              
            # python
            for file in p4; do
              if [ -e "./etc/git/git-core/git-"$file ]; then
                sed -i 's/#!\/bin\/sh/#!\/system\/bin\/python/g' "./etc/git/git-core/git-"$file
              fi
            done

            tar -cv bin lib etc | gzip -9 - > git.tar.gz
            
            for file in share lib etc; do
              rm -vf $file
            done


      - name: Download artifacts
        uses: actions/upload-artifact@v1
        with:
          name: "package"
          path: "git-static"

            
